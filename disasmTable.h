#ifndef _DISASMTABLE_H
#define _DISASMTABLE_H
#endif

#pragma once
#include "disasm.h"

const CmdData CmdDataTable[] = {
	{ 0x0000FF, 0x000090, 1, 00, NNN, NNN, NNN, C_NOP },  //'NOP'),
	{ 0x0000FE, 0x00008A, 1, WW, REG, MRG, NNN, C_MOV },  //'MOV'),
	{ 0x0000F8, 0x000050, 1, 00, RCM, NNN, NNN, C_PSH },  //'PUSH'),
	{ 0x0000FE, 0x000088, 1, WW, MRG, REG, NNN, C_MOV },  //'MOV'),
	{ 0x0000FF, 0x0000E8, 1, 00, JOW, NNN, NNN, C_CAL },  //'CALL'),
	{ 0x0000FD, 0x000068, 1, SS, IMM, NNN, NNN, C_PSH },  //'PUSH'),
	{ 0x0000FF, 0x00008D, 1, 00, REG, MMA, NNN, C_LEA },  //'LEA'),
	{ 0x0000FF, 0x000074, 1, CC, JOB, NNN, NNN, C_JMC },  //'JE,JZ'),
	{ 0x0000F8, 0x000058, 1, 00, RCM, NNN, NNN, C_POP },  //'POP'),
	{ 0x0038FC, 0x000080, 1, WS, MRG, IMM, NNN, C_ADD },  //'ADD'),
	{ 0x0000FF, 0x000075, 1, CC, JOB, NNN, NNN, C_JMC },  //'JNZ,JNE'),
	{ 0x0000FF, 0x0000EB, 1, 00, JOB, NNN, NNN, C_JMP },  //'JMP'),
	{ 0x0000FF, 0x0000E9, 1, 00, JOW, NNN, NNN, C_JMP },  //'JMP'),
	{ 0x0000FE, 0x000084, 1, WW, MRG, REG, NNN, C_TST },  //'TEST'),
	{ 0x0038FE, 0x0000C6, 1, WW, MRG, IMM, NNN, C_MOV },  //'MOV'),
	{ 0x0000FE, 0x000032, 1, WW, REG, MRG, NNN, C_XOR },  //'XOR'),
	{ 0x0000FE, 0x00003A, 1, WW, REG, MRG, NNN, C_CMP },  //'CMP'),
	{ 0x0038FC, 0x003880, 1, WS, MRG, IMM, NNN, C_CMP },  //'CMP'),
	{ 0x0038FF, 0x0010FF, 1, 00, MRJ, NNN, NNN, C_CAL },  //'CALL'),
	{ 0x0000FF, 0x0000C3, 1, 00, PRN, NNN, NNN, C_RET },  //'RETN,RET'),
	{ 0x0000F0, 0x0000B0, 1, W3, RCM, IMM, NNN, C_MOV },  //'MOV'),
	{ 0x0000FE, 0x0000A0, 1, WW, RAC, IMA, NNN, C_MOV },  //'MOV'),
	{ 0x00FFFF, 0x00840F, 2, CC, JOW, NNN, NNN, C_JMC },  //'JE,JZ'),
	{ 0x0000F8, 0x000040, 1, 00, RCM, NNN, NNN, C_INC },  //'INC'),
	{ 0x0038FE, 0x0000F6, 1, WW, MRG, IMU, NNN, C_TST },  //'TEST'),
	{ 0x0000FE, 0x0000A2, 1, WW, IMA, RAC, NNN, C_MOV },  //'MOV'),
	{ 0x0000FE, 0x00002A, 1, WW, REG, MRG, NNN, C_SUB },  //'SUB'),
	{ 0x0000FF, 0x00007E, 1, CC, JOB, NNN, NNN, C_JMC },  //'JLE,JNG'),
	{ 0x00FFFF, 0x00850F, 2, CC, JOW, NNN, NNN, C_JMC },  //'JNZ,JNE'),
	{ 0x0000FF, 0x0000C2, 1, 00, IM2, PRN, NNN, C_RET },  //'RETN'),
	{ 0x0038FF, 0x0030FF, 1, 00, MRG, NNN, NNN, C_PSH },  //'PUSH'),
	{ 0x0038FC, 0x000880, 1, WS, MRG, IMU, NNN, C_OR },   //'OR'),
	{ 0x0038FC, 0x002880, 1, WS, MRG, IMM, NNN, C_SUB },  //'SUB'),
	{ 0x0000F8, 0x000048, 1, 00, RCM, NNN, NNN, C_DEC },  //'DEC'),
	{ 0x00FFFF, 0x00BF0F, 2, 00, REG, MR2, NNN, C_MOVSX },  //'MOVSX'),
	{ 0x0000FF, 0x00007C, 1, CC, JOB, NNN, NNN, C_JMC },  //'JL,JNGE'),
	{ 0x0000FE, 0x000002, 1, WW, REG, MRG, NNN, C_ADD },  //'ADD'),
	{ 0x0038FC, 0x002080, 1, WS, MRG, IMU, NNN, C_AND },  //'AND'),
	{ 0x0000FE, 0x00003C, 1, WW, RAC, IMM, NNN, C_CMP },  //'CMP'),
	{ 0x0038FF, 0x0020FF, 1, 00, MRJ, NNN, NNN, C_JMP },  //'JMP'),
	{ 0x0038FE, 0x0010F6, 1, WW, MRG, NNN, NNN, C_NOT },  //'NOT'),
	{ 0x0038FE, 0x0028C0, 1, WW, MRG, IMS, NNN, C_SHR },  //'SHR'),
	{ 0x0000FE, 0x000038, 1, WW, MRG, REG, NNN, C_CMP },  //'CMP'),
	{ 0x0000FF, 0x00007D, 1, CC, JOB, NNN, NNN, C_JMC },  //'JGE,JNL'),
	{ 0x0000FF, 0x00007F, 1, CC, JOB, NNN, NNN, C_JMC },  //'JG,JNLE'),
	{ 0x0038FE, 0x0020C0, 1, WW, MRG, IMS, NNN, C_SHL },  //'SHL'),
	{ 0x0000FE, 0x00001A, 1, WW, REG, MRG, NNN, C_SBB },  //'SBB'),
	{ 0x0038FE, 0x0018F6, 1, WW, MRG, NNN, NNN, C_NEG },  //'NEG'),
	{ 0x0000FF, 0x0000C9, 1, 00, NNN, NNN, NNN, C_LEAVE },  //'LEAVE'),
	{ 0x0000FF, 0x000060, 1, 00, NNN, NNN, NNN, C_PSHA },  //'&PUSHA*'),
	{ 0x0038FF, 0x00008F, 1, 00, MRG, NNN, NNN, C_POP },  //'POP'),
	{ 0x0000FF, 0x000061, 1, 00, NNN, NNN, NNN, C_POPA },  //'&POPA*'),
	{ 0x0000F8, 0x000090, 1, 00, RAC, RCM, NNN, C_XCHG },  //'XCHG'),
	{ 0x0000FE, 0x000086, 1, WW, MRG, REG, NNN, C_XCHG },  //'XCHG'),
	{ 0x0000FE, 0x000000, 1, WW, MRG, REG, NNN, C_ADD },  //'ADD'),
	{ 0x0000FE, 0x000010, 1, WW, MRG, REG, NNN, C_ADC },  //'ADC'),
	{ 0x0000FE, 0x000012, 1, WW, REG, MRG, NNN, C_ADC },  //'ADC'),
	{ 0x0000FE, 0x000020, 1, WW, MRG, REG, NNN, C_AND },  //'AND'),
	{ 0x0000FE, 0x000022, 1, WW, REG, MRG, NNN, C_AND },  //'AND'),
	{ 0x0000FE, 0x000008, 1, WW, MRG, REG, NNN, C_OR },   //'OR'),
	{ 0x0000FE, 0x00000A, 1, WW, REG, MRG, NNN, C_OR },   //'OR'),
	{ 0x0000FE, 0x000028, 1, WW, MRG, REG, NNN, C_SUB },  //'SUB'),
	{ 0x0000FE, 0x000018, 1, WW, MRG, REG, NNN, C_SBB },  //'SBB'),
	{ 0x0000FE, 0x000030, 1, WW, MRG, REG, NNN, C_XOR },  //'XOR'),
	{ 0x0038FC, 0x001080, 1, WS, MRG, IMM, NNN, C_ADC },  //'ADC'),
	{ 0x0038FC, 0x001880, 1, WS, MRG, IMM, NNN, C_SBB },  //'SBB'),
	{ 0x0038FC, 0x003080, 1, WS, MRG, IMU, NNN, C_XOR },  //'XOR'),
	{ 0x0000FE, 0x000004, 1, WW, RAC, IMM, NNN, C_ADD },  //'ADD'),
	{ 0x0000FE, 0x000014, 1, WW, RAC, IMM, NNN, C_ADC },  //'ADC'),
	{ 0x0000FE, 0x000024, 1, WW, RAC, IMU, NNN, C_AND },  //'AND'),
	{ 0x0000FE, 0x00000C, 1, WW, RAC, IMU, NNN, C_OR },   //'OR'),
	{ 0x0000FE, 0x00002C, 1, WW, RAC, IMM, NNN, C_SUB },  //'SUB'),
	{ 0x0000FE, 0x00001C, 1, WW, RAC, IMM, NNN, C_SBB },  //'SBB'),
	{ 0x0000FE, 0x000034, 1, WW, RAC, IMU, NNN, C_XOR },  //'XOR'),
	{ 0x0038FE, 0x0000FE, 1, WW, MRG, NNN, NNN, C_INC },  //'INC'),
	{ 0x0038FE, 0x0008FE, 1, WW, MRG, NNN, NNN, C_DEC },  //'DEC'),
	{ 0x0000FE, 0x0000A8, 1, WW, RAC, IMU, NNN, C_TST },  //'TEST'),
	{ 0x0038FE, 0x0020F6, 1, WW, MRG, NNN, NNN, C_MUL },  //'MUL'),
	{ 0x0038FE, 0x0028F6, 1, WW, MRG, NNN, NNN, C_IMUL },  //'IMUL'),
	{ 0x00FFFF, 0x00AF0F, 2, 00, REG, MRG, NNN, C_IMUL },  //'IMUL'),
	{ 0x0000FF, 0x00006B, 1, 00, REG, MRG, IMX, C_IMUL },  //'IMUL'),
	{ 0x0000FF, 0x000069, 1, 00, REG, MRG, IMM, C_IMUL },  //'IMUL'),
	{ 0x0038FE, 0x0030F6, 1, WW, MRG, NNN, NNN, C_DIV },  //'DIV'),
	{ 0x0038FE, 0x0038F6, 1, WW, MRG, NNN, NNN, C_IDIV },  //'IDIV'),

	{ 0x0000FF, 0x000098, 1, 00, NNN, NNN, NNN, C_CMD },  //'&CBW:CWDE'),
	{ 0x0000FF, 0x000099, 1, 00, NNN, NNN, NNN, C_CMD },  //'&CWD:CDQ'),
	{ 0x0038FE, 0x0000D0, 1, WW, MRG, C01, NNN, C_ROL },  //'ROL'),
	{ 0x0038FE, 0x0008D0, 1, WW, MRG, C01, NNN, C_ROR },  //'ROR'),
	{ 0x0038FE, 0x0010D0, 1, WW, MRG, C01, NNN, C_RCL },  //'RCL'),
	{ 0x0038FE, 0x0018D0, 1, WW, MRG, C01, NNN, C_RCR },  //'RCR'),
	{ 0x0038FE, 0x0020D0, 1, WW, MRG, C01, NNN, C_SHL },  //'SHL'),
	{ 0x0038FE, 0x0028D0, 1, WW, MRG, C01, NNN, C_SHR },  //'SHR'),
	{ 0x0038FE, 0x0038D0, 1, WW, MRG, C01, NNN, C_SAR },  //'SAR'),
	{ 0x0038FE, 0x0000D2, 1, WW, MRG, RCL, NNN, C_ROL },  //'ROL'),
	{ 0x0038FE, 0x0008D2, 1, WW, MRG, RCL, NNN, C_ROR },  //'ROR'),
	{ 0x0038FE, 0x0010D2, 1, WW, MRG, RCL, NNN, C_RCL },  //'RCL'),
	{ 0x0038FE, 0x0018D2, 1, WW, MRG, RCL, NNN, C_RCR },  //'RCR'),
	{ 0x0038FE, 0x0020D2, 1, WW, MRG, RCL, NNN, C_SHL },  //'SHL'),
	{ 0x0038FE, 0x0028D2, 1, WW, MRG, RCL, NNN, C_SHR },  //'SHR'),
	{ 0x0038FE, 0x0038D2, 1, WW, MRG, RCL, NNN, C_SAR },  //'SAR'),
	{ 0x0038FE, 0x0000C0, 1, WW, MRG, IMS, NNN, C_ROL },  //'ROL'),
	{ 0x0038FE, 0x0008C0, 1, WW, MRG, IMS, NNN, C_ROR },  //'ROR'),
	{ 0x0038FE, 0x0010C0, 1, WW, MRG, IMS, NNN, C_RCL },  //'RCL'),
	{ 0x0038FE, 0x0018C0, 1, WW, MRG, IMS, NNN, C_RCR },  //'RCR'),
	{ 0x0038FE, 0x0038C0, 1, WW, MRG, IMS, NNN, C_SAR },  //'SAR'),

	{ 0x0000FF, 0x000070, 1, CC, JOB, NNN, NNN, C_JMC },  //'JO'),
	{ 0x0000FF, 0x000071, 1, CC, JOB, NNN, NNN, C_JMC },  //'JNO'),
	{ 0x0000FF, 0x000072, 1, CC, JOB, NNN, NNN, C_JMC },  //'JB,JC'),
	{ 0x0000FF, 0x000073, 1, CC, JOB, NNN, NNN, C_JMC },  //'JNB,JNC'),
	{ 0x0000FF, 0x000076, 1, CC, JOB, NNN, NNN, C_JMC },  //'JBE,JNA'),
	{ 0x0000FF, 0x000077, 1, CC, JOB, NNN, NNN, C_JMC },  //'JA,JNBE'),
	{ 0x0000FF, 0x000078, 1, CC, JOB, NNN, NNN, C_JMC },  //'JS'),
	{ 0x0000FF, 0x000079, 1, CC, JOB, NNN, NNN, C_JMC },  //'JNS'),
	{ 0x0000FF, 0x00007A, 1, CC, JOB, NNN, NNN, C_JMC },  //'JPE,JP'),
	{ 0x0000FF, 0x00007B, 1, CC, JOB, NNN, NNN, C_JMC },  //'JPO,JNP'),
	{ 0x0000FF, 0x0000E3, 1, 00, JOB, NNN, NNN, C_JMC },  //'$JCXZ:JECXZ'),
	{ 0x00FFFF, 0x00800F, 2, CC, JOW, NNN, NNN, C_JMC },  //'JO'),
	{ 0x00FFFF, 0x00810F, 2, CC, JOW, NNN, NNN, C_JMC },  //'JNO'),
	{ 0x00FFFF, 0x00820F, 2, CC, JOW, NNN, NNN, C_JMC },  //'JB,JC'),
	{ 0x00FFFF, 0x00830F, 2, CC, JOW, NNN, NNN, C_JMC },  //'JNB,JNC'),
	{ 0x00FFFF, 0x00860F, 2, CC, JOW, NNN, NNN, C_JMC },  //'JBE,JNA'),
	{ 0x00FFFF, 0x00870F, 2, CC, JOW, NNN, NNN, C_JMC },  //'JA,JNBE'),
	{ 0x00FFFF, 0x00880F, 2, CC, JOW, NNN, NNN, C_JMC },  //'JS'),
	{ 0x00FFFF, 0x00890F, 2, CC, JOW, NNN, NNN, C_JMC },  //'JNS'),
	{ 0x00FFFF, 0x008A0F, 2, CC, JOW, NNN, NNN, C_JMC },  //'JPE,JP'),
	{ 0x00FFFF, 0x008B0F, 2, CC, JOW, NNN, NNN, C_JMC },  //'JPO,JNP'),
	{ 0x00FFFF, 0x008C0F, 2, CC, JOW, NNN, NNN, C_JMC },  //'JL,JNGE'),
	{ 0x00FFFF, 0x008D0F, 2, CC, JOW, NNN, NNN, C_JMC },  //'JGE,JNL'),
	{ 0x00FFFF, 0x008E0F, 2, CC, JOW, NNN, NNN, C_JMC },  //'JLE,JNG'),
	{ 0x00FFFF, 0x008F0F, 2, CC, JOW, NNN, NNN, C_JMC },  //'JG,JNLE'),

	{ 0x0000FF, 0x0000F8, 1, 00, NNN, NNN, NNN, C_CMD },  //'CLC'),
	{ 0x0000FF, 0x0000F9, 1, 00, NNN, NNN, NNN, C_CMD },  //'STC'),
	{ 0x0000FF, 0x0000F5, 1, 00, NNN, NNN, NNN, C_CMD },  //'CMC'),
	{ 0x0000FF, 0x0000FC, 1, 00, NNN, NNN, NNN, C_CMD },  //'CLD'),
	{ 0x0000FF, 0x0000FD, 1, 00, NNN, NNN, NNN, C_CMD },  //'STD'),
	{ 0x0000FF, 0x0000FA, 1, 00, NNN, NNN, NNN, C_CLI },  //'CLI'),
	{ 0x0000FF, 0x0000FB, 1, 00, NNN, NNN, NNN, C_STI },  //'STI'),
	{ 0x0000FF, 0x00008C, 1, FF, MRG, SGM, NNN, C_MOV },  //'MOV'),
	{ 0x0000FF, 0x00008E, 1, FF, SGM, MRG, NNN, C_MOV },  //'MOV'),
	{ 0x0000FE, 0x0000A6, 1, WW, MSO, MDE, NNN, C_CMPS },  //'CMPS'),
	{ 0x0000FE, 0x0000AC, 1, WW, MSO, NNN, NNN, C_CMD },  //'LODS'),
	{ 0x0000FE, 0x0000A4, 1, WW, MDE, MSO, NNN, C_MOVS },  //'MOVS'),
	{ 0x0000FE, 0x0000AE, 1, WW, MDE, PAC, NNN, C_CMD },  //'SCAS'),
	{ 0x0000FE, 0x0000AA, 1, WW, MDE, PAC, NNN, C_CMD },  //'STOS'),
	{ 0x00FEFF, 0x00A4F3, 1, WW, MDE, MSO, PCX, C_REP },  //'REP MOVS'),
	{ 0x00FEFF, 0x00ACF3, 1, WW, MSO, PAC, PCX, C_REP },  //'REP LODS'),
	{ 0x00FEFF, 0x00AAF3, 1, WW, MDE, PAC, PCX, C_REP },  //'REP STOS'),
	{ 0x00FEFF, 0x00A6F3, 1, WW, MDE, MSO, PCX, C_REP },  //'REPE CMPS'),
	{ 0x00FEFF, 0x00AEF3, 1, WW, MDE, PAC, PCX, C_REP },  //'REPE SCAS'),
	{ 0x00FEFF, 0x00A6F2, 1, WW, MDE, MSO, PCX, C_REP },  //'REPNE CMPS'),
	{ 0x00FEFF, 0x00AEF2, 1, WW, MDE, PAC, PCX, C_REP },  //'REPNE SCAS'),
	{ 0x0000FF, 0x0000EA, 1, 00, JMF, NNN, NNN, C_JMP },  //'JMP'),
	{ 0x0038FF, 0x0028FF, 1, 00, MMS, NNN, NNN, C_JMP },  //'JMP'),
	{ 0x0000FF, 0x00009A, 1, 00, JMF, NNN, NNN, C_CAL },  //'CALL'),
	{ 0x0038FF, 0x0018FF, 1, 00, MMS, NNN, NNN, C_CAL },  //'CALL'),
	{ 0x0000FF, 0x0000CB, 1, 00, PRF, NNN, NNN, C_RET },  //'RETF'),
	{ 0x0000FF, 0x0000CA, 1, 00, IM2, PRF, NNN, C_RET },  //'RETF'),
	{ 0x00FFFF, 0x00A40F, 2, 00, MRG, REG, IMS, C_CMD },  //'SHLD'),
	{ 0x00FFFF, 0x00AC0F, 2, 00, MRG, REG, IMS, C_CMD },  //'SHRD'),
	{ 0x00FFFF, 0x00A50F, 2, 00, MRG, REG, RCL, C_CMD },  //'SHLD'),
	{ 0x00FFFF, 0x00AD0F, 2, 00, MRG, REG, RCL, C_CMD },  //'SHRD'),
	{ 0x00F8FF, 0x00C80F, 2, 00, RCM, NNN, NNN, C_CMD },  //'BSWAP'),
	{ 0x00FEFF, 0x00C00F, 2, WW, MRG, REG, NNN, C_CMD },  //'XADD'),
	{ 0x0000FF, 0x0000E2, 1, LL, JOB, PCX, NNN, C_CMD },  //'$LOOP*'),
	{ 0x0000FF, 0x0000E1, 1, LL, JOB, PCX, NNN, C_CMD },  //'$LOOP*E'),
	{ 0x0000FF, 0x0000E0, 1, LL, JOB, PCX, NNN, C_CMD },  //'$LOOP*NE'),
	{ 0x0000FF, 0x0000C8, 1, 00, IM2, IM1, NNN, C_ENTER },  //'ENTER'),
	{ 0x0000FE, 0x0000E4, 1, WP, RAC, IM1, NNN, C_CMD },  //'IN'),
	{ 0x0000FE, 0x0000EC, 1, WP, RAC, RDX, NNN, C_CMD },  //'IN'),
	{ 0x0000FE, 0x0000E6, 1, WP, IM1, RAC, NNN, C_CMD },  //'OUT'),
	{ 0x0000FE, 0x0000EE, 1, WP, RDX, RAC, NNN, C_CMD },  //'OUT'),
	{ 0x0000FE, 0x00006C, 1, WP, MDE, RDX, NNN, C_CMD },  //'INS'),
	{ 0x0000FE, 0x00006E, 1, WP, RDX, MDE, NNN, C_CMD },  //'OUTS'),
	{ 0x00FEFF, 0x006CF3, 1, WP, MDE, RDX, PCX, C_REP },  //'REP INS'),
	{ 0x00FEFF, 0x006EF3, 1, WP, RDX, MDE, PCX, C_REP },  //'REP OUTS'),
	{ 0x0000FF, 0x000037, 1, 00, NNN, NNN, NNN, C_CMD },  //'AAA'),
	{ 0x0000FF, 0x00003F, 1, 00, NNN, NNN, NNN, C_CMD },  //'AAS'),
	{ 0x00FFFF, 0x000AD4, 2, 00, NNN, NNN, NNN, C_CMD },  //'AAM'),
	{ 0x0000FF, 0x0000D4, 1, 00, IM1, NNN, NNN, C_CMD },  //'AAM'),
	{ 0x00FFFF, 0x000AD5, 2, 00, NNN, NNN, NNN, C_CMD },  //'AAD'),
	{ 0x0000FF, 0x0000D5, 1, 00, IM1, NNN, NNN, C_CMD },  //'AAD'),
	{ 0x0000FF, 0x000027, 1, 00, NNN, NNN, NNN, C_CMD },  //'DAA'),
	{ 0x0000FF, 0x00002F, 1, 00, NNN, NNN, NNN, C_CMD },  //'DAS'),
	{ 0x0000FF, 0x0000F4, 1, PR, NNN, NNN, NNN, C_PRI },  //'HLT'),
	{ 0x0000FF, 0x00000E, 1, 00, SCM, NNN, NNN, C_PSH },  //'PUSH'),
	{ 0x0000FF, 0x000016, 1, 00, SCM, NNN, NNN, C_PSH },  //'PUSH'),
	{ 0x0000FF, 0x00001E, 1, 00, SCM, NNN, NNN, C_PSH },  //'PUSH'),
	{ 0x0000FF, 0x000006, 1, 00, SCM, NNN, NNN, C_PSH },  //'PUSH'),
	{ 0x00FFFF, 0x00A00F, 2, 00, SCM, NNN, NNN, C_PSH },  //'PUSH'),
	{ 0x00FFFF, 0x00A80F, 2, 00, SCM, NNN, NNN, C_PSH },  //'PUSH'),
	{ 0x0000FF, 0x00001F, 1, 00, SCM, NNN, NNN, C_POP },  //'POP'),
	{ 0x0000FF, 0x000007, 1, 00, SCM, NNN, NNN, C_POP },  //'POP'),
	{ 0x0000FF, 0x000017, 1, 00, SCM, NNN, NNN, C_POP },  //'POP'),
	{ 0x00FFFF, 0x00A10F, 2, 00, SCM, NNN, NNN, C_POP },  //'POP'),
	{ 0x00FFFF, 0x00A90F, 2, 00, SCM, NNN, NNN, C_POP },  //'POP'),
	{ 0x0000FF, 0x0000D7, 1, 00, MXL, NNN, NNN, C_CMD },  //'XLAT'),
	{ 0x00FFFF, 0x00BE0F, 2, 00, REG, MR1, NNN, C_MOVSX },  //'MOVSX'),
	{ 0x00FFFF, 0x00B60F, 2, 00, REG, MR1, NNN, C_MOVZX },  //'MOVZX'),
	{ 0x00FFFF, 0x00B70F, 2, 00, REG, MR2, NNN, C_MOVZX },  //'MOVZX'),
	{ 0x0000FF, 0x00009B, 1, 00, NNN, NNN, NNN, C_CMD },  //'WAIT'),
	{ 0x0000FF, 0x00009F, 1, 00, PAH, PFL, NNN, C_CMD },  //'LAHF'),
	{ 0x0000FF, 0x00009E, 1, 00, PFL, PAH, NNN, C_CMD },  //'SAHF'),
	{ 0x0000FF, 0x00009C, 1, 00, NNN, NNN, NNN, C_PSHF },  //'&PUSHF*'),
	{ 0x0000FF, 0x00009D, 1, 00, NNN, NNN, NNN, C_POPF },  //'&POPF*'),
	{ 0x0000FF, 0x0000CD, 1, 00, IM1, NNN, NNN, C_INT },  //'INT'),
	{ 0x0000FF, 0x0000CC, 1, 00, NNN, NNN, NNN, C_INT3 },  //'INT3'),
	{ 0x0000FF, 0x0000CE, 1, 00, NNN, NNN, NNN, C_CMD },  //'INTO'),
	{ 0x0000FF, 0x0000CF, 1, 00, NNN, NNN, NNN, C_RTF },  //'&IRET*'),
	{ 0x00FFFF, 0x00900F, 2, CC, MR1, NNN, NNN, C_CMD },  //'SETO'),
	{ 0x00FFFF, 0x00910F, 2, CC, MR1, NNN, NNN, C_CMD },  //'SETNO'),
	{ 0x00FFFF, 0x00920F, 2, CC, MR1, NNN, NNN, C_CMD },  //'SETB,SETC'),
	{ 0x00FFFF, 0x00930F, 2, CC, MR1, NNN, NNN, C_CMD },  //'SETNB,SETNC'),
	{ 0x00FFFF, 0x00940F, 2, CC, MR1, NNN, NNN, C_CMD },  //'SETE,SETZ'),
	{ 0x00FFFF, 0x00950F, 2, CC, MR1, NNN, NNN, C_SETNE },  //'SETNE,SETNZ'),
	{ 0x00FFFF, 0x00960F, 2, CC, MR1, NNN, NNN, C_CMD },  //'SETBE,SETNA'),
	{ 0x00FFFF, 0x00970F, 2, CC, MR1, NNN, NNN, C_CMD },  //'SETA,SETNBE'),
	{ 0x00FFFF, 0x00980F, 2, CC, MR1, NNN, NNN, C_CMD },  //'SETS'),
	{ 0x00FFFF, 0x00990F, 2, CC, MR1, NNN, NNN, C_CMD },  //'SETNS'),
	{ 0x00FFFF, 0x009A0F, 2, CC, MR1, NNN, NNN, C_CMD },  //'SETPE,SETP'),
	{ 0x00FFFF, 0x009B0F, 2, CC, MR1, NNN, NNN, C_CMD },  //'SETPO,SETNP'),
	{ 0x00FFFF, 0x009C0F, 2, CC, MR1, NNN, NNN, C_CMD },  //'SETL,SETNGE'),
	{ 0x00FFFF, 0x009D0F, 2, CC, MR1, NNN, NNN, C_CMD },  //'SETGE,SETNL'),
	{ 0x00FFFF, 0x009E0F, 2, CC, MR1, NNN, NNN, C_CMD },  //'SETLE,SETNG'),
	{ 0x00FFFF, 0x009F0F, 2, CC, MR1, NNN, NNN, C_CMD },  //'SETG,SETNLE'),
	{ 0x38FFFF, 0x20BA0F, 2, 00, MRG, IM1, NNN, C_CMD },  //'BT'),
	{ 0x38FFFF, 0x28BA0F, 2, 00, MRG, IM1, NNN, C_CMD },  //'BTS'),
	{ 0x38FFFF, 0x30BA0F, 2, 00, MRG, IM1, NNN, C_CMD },  //'BTR'),
	{ 0x38FFFF, 0x38BA0F, 2, 00, MRG, IM1, NNN, C_CMD },  //'BTC'),
	{ 0x00FFFF, 0x00A30F, 2, 00, MRG, REG, NNN, C_CMD },  //'BT'),
	{ 0x00FFFF, 0x00AB0F, 2, 00, MRG, REG, NNN, C_CMD },  //'BTS'),
	{ 0x00FFFF, 0x00B30F, 2, 00, MRG, REG, NNN, C_CMD },  //1'BTR'),
	{ 0x00FFFF, 0x00BB0F, 2, 00, MRG, REG, NNN, C_CMD },  //'BTC'),
	{ 0x0000FF, 0x0000C5, 1, 00, REG, MML, NNN, C_CMD },  //'LDS'),
	{ 0x0000FF, 0x0000C4, 1, 00, REG, MML, NNN, C_CMD },  //'LES'),
	{ 0x00FFFF, 0x00B40F, 2, 00, REG, MML, NNN, C_CMD },  //'LFS'),
	{ 0x00FFFF, 0x00B50F, 2, 00, REG, MML, NNN, C_CMD },  //'LGS'),
	{ 0x00FFFF, 0x00B20F, 2, 00, REG, MML, NNN, C_CMD },  //'LSS'),
	{ 0x0000FF, 0x000063, 1, 00, MRG, REG, NNN, C_CMD },  //'ARPL'),
	{ 0x0000FF, 0x000062, 1, 00, REG, MMB, NNN, C_CMD },  //'BOUND'),
	{ 0x00FFFF, 0x00BC0F, 2, 00, REG, MRG, NNN, C_CMD },  //'BSF'),
	{ 0x00FFFF, 0x00BD0F, 2, 00, REG, MRG, NNN, C_CMD },  //'BSR'),
	{ 0x00FFFF, 0x00060F, 2, PR, NNN, NNN, NNN, C_CMD },  //'CLTS'),
	{ 0x00FFFF, 0x00400F, 2, CC, REG, MRG, NNN, C_CMD },  //'CMOVO'),
	{ 0x00FFFF, 0x00410F, 2, CC, REG, MRG, NNN, C_CMD },  //'CMOVNO'),
	{ 0x00FFFF, 0x00420F, 2, CC, REG, MRG, NNN, C_CMD },  //'CMOVB,CMOVC'),
	{ 0x00FFFF, 0x00430F, 2, CC, REG, MRG, NNN, C_CMD },  //'CMOVNB,CMOVNC'),
	{ 0x00FFFF, 0x00440F, 2, CC, REG, MRG, NNN, C_CMD },  //'CMOVE,CMOVZ'),
	{ 0x00FFFF, 0x00450F, 2, CC, REG, MRG, NNN, C_CMD },  //'CMOVNE,CMOVNZ'),
	{ 0x00FFFF, 0x00460F, 2, CC, REG, MRG, NNN, C_CMD },  //'CMOVBE,CMOVNA'),
	{ 0x00FFFF, 0x00470F, 2, CC, REG, MRG, NNN, C_CMD },  //'CMOVA,CMOVNBE'),
	{ 0x00FFFF, 0x00480F, 2, CC, REG, MRG, NNN, C_CMD },  //'CMOVS'),
	{ 0x00FFFF, 0x00490F, 2, CC, REG, MRG, NNN, C_CMD },  //'CMOVNS'),
	{ 0x00FFFF, 0x004A0F, 2, CC, REG, MRG, NNN, C_CMD },  //'CMOVPE,CMOVP'),
	{ 0x00FFFF, 0x004B0F, 2, CC, REG, MRG, NNN, C_CMD },  //'CMOVPO,CMOVNP'),
	{ 0x00FFFF, 0x004C0F, 2, CC, REG, MRG, NNN, C_CMD },  //'CMOVL,CMOVNGE'),
	{ 0x00FFFF, 0x004D0F, 2, CC, REG, MRG, NNN, C_CMD },  //'CMOVGE,CMOVNL'),
	{ 0x00FFFF, 0x004E0F, 2, CC, REG, MRG, NNN, C_CMD },  //'CMOVLE,CMOVNG'),
	{ 0x00FFFF, 0x004F0F, 2, CC, REG, MRG, NNN, C_CMD },  //'CMOVG,CMOVNLE'),
	{ 0x00FEFF, 0x00B00F, 2, WW, MRG, REG, NNN, C_CMD },  //'CMPXCHG'),
	{ 0x38FFFF, 0x08C70F, 2, 00, MD8, NNN, NNN, C_CMD },  //'CMPXCHG8B'),
	{ 0x00FFFF, 0x00A20F, 2, 00, NNN, NNN, NNN, C_CMD },  //'CPUID'),
	{ 0x00FFFF, 0x00080F, 2, PR, NNN, NNN, NNN, C_CMD },  //'INVD'),
	{ 0x00FFFF, 0x00020F, 2, 00, REG, MRG, NNN, C_CMD },  //'LAR'),
	{ 0x00FFFF, 0x00030F, 2, 00, REG, MRG, NNN, C_CMD },  //'LSL'),
	{ 0x38FFFF, 0x38010F, 2, PR, MR1, NNN, NNN, C_CMD },  //'INVLPG'),
	{ 0x00FFFF, 0x00090F, 2, PR, NNN, NNN, NNN, C_CMD },  //'WBINVD'),
	{ 0x38FFFF, 0x10010F, 2, PR, MM6, NNN, NNN, C_CMD },  //'LGDT'),
	{ 0x38FFFF, 0x00010F, 2, 00, MM6, NNN, NNN, C_CMD },  //'SGDT'),
	{ 0x38FFFF, 0x18010F, 2, PR, MM6, NNN, NNN, C_CMD },  //'LIDT'),
	{ 0x38FFFF, 0x08010F, 2, 00, MM6, NNN, NNN, C_CMD },  //'SIDT'),
	{ 0x38FFFF, 0x10000F, 2, PR, MR2, NNN, NNN, C_CMD },  //'LLDT'),
	{ 0x38FFFF, 0x00000F, 2, 00, MR2, NNN, NNN, C_CMD },  //'SLDT'),
	{ 0x38FFFF, 0x18000F, 2, PR, MR2, NNN, NNN, C_CMD },  //'LTR'),
	{ 0x38FFFF, 0x08000F, 2, 00, MR2, NNN, NNN, C_CMD },  //'STR'),
	{ 0x38FFFF, 0x30010F, 2, PR, MR2, NNN, NNN, C_CMD },  //'LMSW'),
	{ 0x38FFFF, 0x20010F, 2, 00, MR2, NNN, NNN, C_CMD },  //'SMSW'),
	{ 0x38FFFF, 0x20000F, 2, 00, MR2, NNN, NNN, C_CMD },  //'VERR'),
	{ 0x38FFFF, 0x28000F, 2, 00, MR2, NNN, NNN, C_CMD },  //'VERW'),
	{ 0xC0FFFF, 0xC0220F, 2, PR, CRX, RR4, NNN, C_MOV },  //'MOV'),
	{ 0xC0FFFF, 0xC0200F, 2, 00, RR4, CRX, NNN, C_MOV },  //'MOV'),
	{ 0xC0FFFF, 0xC0230F, 2, PR, DRX, RR4, NNN, C_MOV },  //'MOV'),
	{ 0xC0FFFF, 0xC0210F, 2, PR, RR4, DRX, NNN, C_MOV },  //'MOV'),
	{ 0x00FFFF, 0x00310F, 2, 00, NNN, NNN, NNN, C_CMD },  //'RDTSC'),
	{ 0x00FFFF, 0x00320F, 2, PR, NNN, NNN, NNN, C_CMD },  //'RDMSR'),
	{ 0x00FFFF, 0x00300F, 2, PR, NNN, NNN, NNN, C_CMD },  //'WRMSR'),
	{ 0x00FFFF, 0x00330F, 2, PR, NNN, NNN, NNN, C_CMD },  //'RDPMC'),
	{ 0x00FFFF, 0x00AA0F, 2, PR, NNN, NNN, NNN, C_RTF },  //'RSM'),
	{ 0x00FFFF, 0x000B0F, 2, 00, NNN, NNN, NNN, C_CMD },  //'UD2'),
	{ 0x00FFFF, 0x00340F, 2, 00, NNN, NNN, NNN, C_SYSENTER },  //'SYSENTER'),
	{ 0x00FFFF, 0x00350F, 2, PR, NNN, NNN, NNN, C_SYSEXIT },  //'SYSEXIT'),
	{ 0x0000FF, 0x0000D6, 1, 00, NNN, NNN, NNN, C_CMD },  //'SALC'),

	// Some alternative mnemonics for Assembler, not used by Disassembler (so
	// implicit pseudooperands are not marked).
	{ 0x0000FF, 0x0000A6, 1, 00, NNN, NNN, NNN, C_CMPSB },  //'CMPSB'),
	{ 0x00FFFF, 0x00A766, 2, 00, NNN, NNN, NNN, C_CMPSW },  //'CMPSW'),
	{ 0x0000FF, 0x0000A7, 1, 00, NNN, NNN, NNN, C_CMPSD },  //'CMPSD'),
	{ 0x0000FF, 0x0000AC, 1, 00, NNN, NNN, NNN, C_CMD },  //'LODSB'),
	{ 0x00FFFF, 0x00AD66, 2, 00, NNN, NNN, NNN, C_CMD },  //'LODSW'),
	{ 0x0000FF, 0x0000AD, 1, 00, NNN, NNN, NNN, C_CMD },  //'LODSD'),
	{ 0x0000FF, 0x0000A4, 1, 00, NNN, NNN, NNN, C_MOVSB },  //'MOVSB'),
	{ 0x00FFFF, 0x00A566, 2, 00, NNN, NNN, NNN, C_MOVSW },  //'MOVSW'),
	{ 0x0000FF, 0x0000A5, 1, 00, NNN, NNN, NNN, C_MOVSD },  //'MOVSD'),
	{ 0x0000FF, 0x0000AE, 1, 00, NNN, NNN, NNN, C_CMD },  //'SCASB'),
	{ 0x00FFFF, 0x00AF66, 1, 00, NNN, NNN, NNN, C_CMD },  //'SCASW'),
	{ 0x0000FF, 0x0000AF, 1, 00, NNN, NNN, NNN, C_CMD },  //'SCASD'),
	{ 0x0000FF, 0x0000AA, 1, 00, NNN, NNN, NNN, C_CMD },  //'STOSB'),
	{ 0x00FFFF, 0x00AB66, 2, 00, NNN, NNN, NNN, C_CMD },  //'STOSW'),
	{ 0x0000FF, 0x0000AB, 1, 00, NNN, NNN, NNN, C_CMD },  //'STOSD'),
	{ 0x00FFFF, 0x00A4F3, 1, 00, NNN, NNN, NNN, C_REP },  //'REP MOVSB'),
	{ 0xFFFFFF, 0xA5F366, 2, 00, NNN, NNN, NNN, C_REP },  //'REP MOVSW'),
	{ 0x00FFFF, 0x00A5F3, 1, 00, NNN, NNN, NNN, C_REP },  //'REP MOVSD'),
	{ 0x00FFFF, 0x00ACF3, 1, 00, NNN, NNN, NNN, C_REP },  //'REP LODSB'),
	{ 0xFFFFFF, 0xADF366, 2, 00, NNN, NNN, NNN, C_REP },  //'REP LODSW'),
	{ 0x00FFFF, 0x00ADF3, 1, 00, NNN, NNN, NNN, C_REP },  //'REP LODSD'),
	{ 0x00FFFF, 0x00AAF3, 1, 00, NNN, NNN, NNN, C_REP },  //'REP STOSB'),
	{ 0xFFFFFF, 0xABF366, 2, 00, NNN, NNN, NNN, C_REP },  //'REP STOSW'),
	{ 0x00FFFF, 0x00ABF3, 1, 00, NNN, NNN, NNN, C_REP },  //'REP STOSD'),
	{ 0x00FFFF, 0x00A6F3, 1, 00, NNN, NNN, NNN, C_REP },  //'REPE CMPSB'),
	{ 0xFFFFFF, 0xA7F366, 2, 00, NNN, NNN, NNN, C_REP },  //'REPE CMPSW'),
	{ 0x00FFFF, 0x00A7F3, 1, 00, NNN, NNN, NNN, C_REP },  //'REPE CMPSD'),
	{ 0x00FFFF, 0x00AEF3, 1, 00, NNN, NNN, NNN, C_REP },  //'REPE SCASB'),
	{ 0xFFFFFF, 0xAFF366, 2, 00, NNN, NNN, NNN, C_REP },  //'REPE SCASW'),
	{ 0x00FFFF, 0x00AFF3, 1, 00, NNN, NNN, NNN, C_REP },  //'REPE SCASD'),
	{ 0x00FFFF, 0x00A6F2, 1, 00, NNN, NNN, NNN, C_REP },  //'REPNE CMPSB'),
	{ 0xFFFFFF, 0xA7F266, 2, 00, NNN, NNN, NNN, C_REP },  //'REPNE CMPSW'),
	{ 0x00FFFF, 0x00A7F2, 1, 00, NNN, NNN, NNN, C_REP },  //'REPNE CMPSD'),
	{ 0x00FFFF, 0x00AEF2, 1, 00, NNN, NNN, NNN, C_REP },  //'REPNE SCASB'),
	{ 0xFFFFFF, 0xAFF266, 2, 00, NNN, NNN, NNN, C_REP },  //'REPNE SCASW'),
	{ 0x00FFFF, 0x00AFF2, 1, 00, NNN, NNN, NNN, C_REP },  //'REPNE SCASD'),
	{ 0x0000FF, 0x00006C, 1, 00, NNN, NNN, NNN, C_CMD },  //'INSB'),
	{ 0x00FFFF, 0x006D66, 2, 00, NNN, NNN, NNN, C_CMD },  //'INSW'),
	{ 0x0000FF, 0x00006D, 1, 00, NNN, NNN, NNN, C_CMD },  //'INSD'),
	{ 0x0000FF, 0x00006E, 1, 00, NNN, NNN, NNN, C_CMD },  //'OUTSB'),
	{ 0x00FFFF, 0x006F66, 2, 00, NNN, NNN, NNN, C_CMD },  //'OUTSW'),
	{ 0x0000FF, 0x00006F, 1, 00, NNN, NNN, NNN, C_CMD },  //'OUTSD'),
	{ 0x00FFFF, 0x006CF3, 1, 00, NNN, NNN, NNN, C_REP },  //'REP INSB'),
	{ 0xFFFFFF, 0x6DF366, 2, 00, NNN, NNN, NNN, C_REP },  //'REP INSW'),
	{ 0x00FFFF, 0x006DF3, 1, 00, NNN, NNN, NNN, C_REP },  //'REP INSD'),
	{ 0x00FFFF, 0x006EF3, 1, 00, NNN, NNN, NNN, C_REP },  //'REP OUTSB'),
	{ 0xFFFFFF, 0x6FF366, 2, 00, NNN, NNN, NNN, C_REP },  //'REP OUTSW'),
	{ 0x00FFFF, 0x006FF3, 1, 00, NNN, NNN, NNN, C_REP },  //'REP OUTSD'),
	{ 0x0000FF, 0x0000E1, 1, 00, JOB, NNN, NNN, C_CMD },  //'$LOOP*Z'),
	{ 0x0000FF, 0x0000E0, 1, 00, JOB, NNN, NNN, C_CMD },  //'$LOOP*NZ'),
	{ 0x0000FF, 0x00009B, 1, 00, NNN, NNN, NNN, C_CMD },  //'FWAIT'),
	{ 0x0000FF, 0x0000D7, 1, 00, NNN, NNN, NNN, C_CMD },  //'XLATB'),
	{ 0x00FFFF, 0x00C40F, 2, 00, RMX, RR4, IM1, C_MMX },  //'PINSRW'),
	{ 0x00FFFF, 0x0020CD, 2, 00, VXD, NNN, NNN, C_CMD },  //'VxDCall'),

	{ 0x0000F0, 0x000070, 1, CC, JOB, NNN, NNN, C_JMC },  //'JCC'),
	{ 0x00F0FF, 0x00800F, 2, CC, JOW, NNN, NNN, C_JMC },  //'JCC'),
	{ 0x00F0FF, 0x00900F, 2, CC, MR1, NNN, NNN, C_CMD },  //'SETCC'),
	{ 0x00F0FF, 0x00400F, 2, CC, REG, MRG, NNN, C_CMD },  //'CMOVCC'),

	{ 0x000000, 0x000000, 0, 00, NNN, NNN, NNN, C_CMD}  //'')
};